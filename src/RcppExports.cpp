// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// alimena_square
List alimena_square(CharacterVector labels);
RcppExport SEXP _funfact_alimena_square(SEXP labelsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type labels(labelsSEXP);
    rcpp_result_gen = Rcpp::wrap(alimena_square(labels));
    return rcpp_result_gen;
END_RCPP
}
// prs_factor
List prs_factor(CharacterVector labels, int nreps, int maxrun);
RcppExport SEXP _funfact_prs_factor(SEXP labelsSEXP, SEXP nrepsSEXP, SEXP maxrunSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type labels(labelsSEXP);
    Rcpp::traits::input_parameter< int >::type nreps(nrepsSEXP);
    Rcpp::traits::input_parameter< int >::type maxrun(maxrunSEXP);
    rcpp_result_gen = Rcpp::wrap(prs_factor(labels, nreps, maxrun));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_funfact_alimena_square", (DL_FUNC) &_funfact_alimena_square, 1},
    {"_funfact_prs_factor", (DL_FUNC) &_funfact_prs_factor, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_funfact(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
